This project represents an ongoing initiative within the CS Department at Western Colorado University. My role initially involved grading an introductory-level CS course. However, the professor overseeing the course expressed a need for a plagiarism-detection solution to ensure the integrity of students' code submissions. Despite searching extensively online, I was unable to find an existing tool capable of automating the comparison of every code file against one another. Consequently, I undertook the challenge of developing my own solution.
The software I devised employs the Levenshtein Distance Algorithm to assess the similarity of code lines. Importantly, it performs pairwise comparisons of every line within each student's code, thus accommodating various permutations and offsets. This comprehensive approach ensures that even if code is reorganized or shifted, the algorithm can still effectively identify similarities. Each student's code is compared to every other student's submissions, and subsequently, scores are generated based on the degree of similarity detected. The lowest score corresponds to the highest similarity, allowing for further analysis to determine if any instances of code copying have occurred.
After presenting my solution to several Computer Science professors, it has been adopted as a vital tool for plagiarism detection within the Computer Science department. Furthermore, its versatility extends to checking for OpenAI-generated responses, offering an additional layer of scrutiny to prevent cheating. You can access the code for this tool via the following link:
>>LINK>>https://github.com/gmoyer/homework-diff-checker>>Homework Difference Checker